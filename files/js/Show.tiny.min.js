var Show={};Show.Category={};Show.Entry={};Show.Entry.Coordinates={};Show.Map={};Show.Category.MarkAllAsRead=Class.extend({_callback:null,_proxy:null,init:function(a){this._callback=a;this._proxy=new WCF.Action.Proxy({success:$.proxy(this._success,this)});$(".markAllAsReadButton").click($.proxy(this._click,this))},_click:function(a){a.preventDefault();this._proxy.setOption("data",{actionName:"markAllAsRead",className:"show\\data\\category\\ShowCategoryAction"});this._proxy.sendRequest()},_success:function(d,e,c){if(this._callback&&$.isFunction(this._callback)){return this._callback()}var a=$(".nestedCategoryList");a.find(".badge.badgeUpdate").hide();$(".mainMenu .active .badge").hide();var b=new WCF.System.Notification(WCF.Language.get("wcf.global.success"),"success");b.show()}});Show.Entry.Clipboard=Class.extend({_categoryID:0,_environment:"",_updateHandler:{},init:function(){},_clipboardAction:function(){}});Show.Entry.InlineEditor=WCF.InlineEditor.extend({_environment:"",_permissions:{},_redirectURL:"",_updateHandler:{},_setOptions:function(){},setUpdateHandler:function(){},_getTriggerElement:function(){},_show:function(){},_validate:function(){},_execute:function(){},_updateEntry:function(){},_updateState:function(){},_getPermission:function(){},setEnvironment:function(){},setPermission:function(){},setPermissions:function(){},_callbacks:{},_dropdowns:{},_elements:{},_notification:{},_options:{},_proxy:{},_triggerElements:{},_updateData:{},init:function(){},_closeAll:function(){},registerCallback:function(){},_validateCallbacks:function(){},_success:function(){},_click:function(){},_executeCallback:function(){},_hide:function(){}});Show.Entry.UpdateHandler=Class.extend({_entrys:{},init:function(){},update:function(){},_updateProperty:function(){},_handleCustomProperty:function(){},_delete:function(){},_deleteNote:function(){},_disable:function(){},_enable:function(){},_restore:function(){},_setAsFeatured:function(){},_trash:function(){},_unsetAsFeatured:function(){},getValue:function(){}});Show.Entry.UpdateHandler.Category=Show.Entry.UpdateHandler.extend({_delete:function(){},_deleteNote:function(){},_disable:function(){},_enable:function(){},_restore:function(){},_setAsFeatured:function(){},_trash:function(){},_unsetAsFeatured:function(){},_entrys:{},init:function(){},update:function(){},_updateProperty:function(){},_handleCustomProperty:function(){},getValue:function(){}});Show.Entry.UpdateHandler.Entry=Show.Entry.UpdateHandler.extend({update:function(){},_delete:function(){},_deleteNote:function(){},_disable:function(){},_enable:function(){},_restore:function(){},_setAsFeatured:function(){},_trash:function(){},_unsetAsFeatured:function(){},_entrys:{},init:function(){},_updateProperty:function(){},_handleCustomProperty:function(){},getValue:function(){}});Show.Entry.Preview=WCF.Popover.extend({_proxy:null,init:function(){this._super(".showEntryLink");this._proxy=new WCF.Action.Proxy({showLoadingOverlay:false});WCF.DOMNodeInsertedHandler.addCallback("Show.Entry.Preview",$.proxy(this._initContainers,this))},_loadContent:function(){var b=$("#"+this._activeElementID);this._proxy.setOption("data",{actionName:"getEntryPreview",className:"show\\data\\entry\\EntryAction",objectIDs:[b.data("entryID")]});var c=this._activeElementID;var a=this;this._proxy.setOption("success",function(e,f,d){a._insertContent(c,e.returnValues.template,true)});this._proxy.sendRequest()}});Show.Entry.WatchedEntryList=Class.extend({_button:{},_markAllCheckbox:{},init:function(){},_mark:function(){},_markAll:function(){},_stopWatching:function(){},_updateButtonLabel:function(){}});Show.Entry.IconUpload=WCF.Upload.extend({_deleteEntryIconButton:{},_entryID:0,_icon:{},_tmpHash:"",init:function(){},_getParameters:function(){},_success:function(){},_upload:function(){},_getIcon:function(){},_getInnerErrorElement:function(){},_confirmDeleteIcon:function(){},_deleteIcon:function(){},_name:"",_buttonSelector:{},_fileListSelector:{},_fileUpload:{},_className:"",_iframe:{},_internalFileID:0,_options:{},_uploadMatrix:{},_supportsAJAXUpload:true,_overlay:{},_createButton:function(){},_insertButton:function(){},_removeButton:function(){},_createUploadMatrix:function(){},_error:function(){},_progress:function(){},_initEntry:function(){},_showOverlay:function(){},_evaluateResponse:function(){},_getFilename:function(){}});Show.Entry.LabelChooser=WCF.Label.Chooser.extend({_labelGroupsToCategories:{},init:function(){},_updateLabelGroups:function(){},_submit:function(){},_container:{},_groups:{},_showWithoutSelection:false,_initContainers:function(){},_click:function(){},_selectLabel:function(){}});Show.Entry.AssignLabelHandler={_categoryID:0,_dialog:{},_objectIDs:{},prepare:function(){},_click:function(){},_success:function(){}};Show.Entry.Coordinates.Handler=Class.extend({_form:null,_locationInput:null,init:function(a){this._locationInput=a;this._form=$("#messageContainer").submit($.proxy(this._submit,this))},_submit:function(a){if(this._form.data("geocodingCompleted")){return true}var b=$.trim($("#geocode").val());if(!b){WCF.Location.GoogleMaps.Util.reverseGeocoding($.proxy(this._reverseGeocoding,this),this._locationInput.getMarker());a.preventDefault();return false}this._setCoordinates()},_reverseGeocoding:function(a){$("#geocode").val(a);this._setCoordinates();this._form.trigger("submit")},_setCoordinates:function(){var a=this._form.find(".formSubmit");$('<input type="hidden" name="latitude" value="'+this._locationInput.getMarker().getPosition().lat()+'" />').appendTo(a);$('<input type="hidden" name="longitude" value="'+this._locationInput.getMarker().getPosition().lng()+'" />').appendTo(a);this._form.data("geocodingCompleted",true)}});Show.Map.LargeMap=WCF.Location.GoogleMaps.LargeMap.extend({init:function(e,b,d,c,a){if(!b){b={}}b.stringifyExcludedObjectIds=true;this._super(e,b,d,c,a)},_success:function(c,f,b){if(c.returnValues&&c.returnValues.markers){for(var e=0,d=c.returnValues.markers.length;e<d;e++){var a=c.returnValues.markers[e];this.addMarker(a.latitude,a.longitude,a.title,null,a.infoWindow,a.dialog,a.location);if(a.objectID){this._objectIDs.push(a.objectID)}else{if(a.objectIDs){this._objectIDs=this._objectIDs.concat(a.objectIDs)}}}}},addMarker:function(b,a,d,c,e,h,f){var g=$(e).get(0);var i=this._super(b,a,d,c,g);return i.infoWindow}});
